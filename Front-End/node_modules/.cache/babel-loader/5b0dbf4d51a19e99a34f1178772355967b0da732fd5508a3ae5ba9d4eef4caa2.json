{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Performance-main/src/Components/Text-Area/Text-Area.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport FileUpload from \"../File/File.component\";\nimport './Text-Area.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextArea() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [inputValues, setInputValues] = useState([]);\n\n  // Function to handle changes in input values\n  const handleInputChange = (index, value) => {\n    const newInputValues = [...inputValues];\n    newInputValues[index] = value;\n    setInputValues(newInputValues);\n  };\n  const handleTextAreaChange = async e => {\n    setText(e.target.value);\n  };\n  async function compileAndDeploy() {\n    const params = {\n      contractName: 'Storage',\n      sourceCode: text,\n      network: 'Something'\n    };\n    try {\n      console.log(\"At text area\");\n      const response = await axios.get('http://10.1.33.124:8000/compile-and-deploy', {\n        params\n      });\n      console.log(response.data);\n      if (response.data.result.abi) {\n        window.alert('Compiled successfully');\n      } else {\n        window.alert(response.data.result);\n      }\n      // Find the constructor in the ABI\n      let args = [];\n      let numInputs = 0;\n      const abi = response.data.result.abi;\n      const bytecode = response.data.result.bytecode;\n      const constructor = abi.find(item => item.type === 'constructor');\n      if (constructor) {\n        // Access constructor parameters and their types\n        const constructorInputs = constructor.inputs || [];\n        console.log('Constructor Parameters:');\n        constructorInputs.forEach(param => {\n          console.log(`Name: ${param.name}, Type: ${param.type}`);\n        });\n        numInputs = constructor.inputs.length;\n      } else {\n        console.log('No constructor found in the ABI.');\n      }\n      console.log('Constructor Inputs', numInputs);\n\n      // Generate input boxes based on constructor inputs\n      const inputBoxes = constructor.inputs.map((param, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: param.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: param.type,\n          value: inputValues[index] || '',\n          onChange: e => handleInputChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this));\n\n      // Render the input boxes\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [inputBoxes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deployContract,\n          children: \"Deploy Contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Paste your code below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"inner\",\n      id: \"large-text\",\n      name: \"large-text\",\n      rows: \"25\",\n      cols: \"70\",\n      value: text,\n      onChange: handleTextAreaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Or upload the code file here:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"compile-button\",\n      onClick: compileAndDeploy,\n      children: \" Compile & Deploy \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(TextArea, \"2nTr/r4c7s/VHAXV0qhdpv/WIik=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","axios","FileUpload","jsxDEV","_jsxDEV","TextArea","_s","text","setText","inputValues","setInputValues","handleInputChange","index","value","newInputValues","handleTextAreaChange","e","target","compileAndDeploy","params","contractName","sourceCode","network","console","log","response","get","data","result","abi","window","alert","args","numInputs","bytecode","constructor","find","item","type","constructorInputs","inputs","forEach","param","name","length","inputBoxes","map","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","deployContract","error","className","id","rows","cols","_c","$RefreshReg$"],"sources":["/home/user/Documents/Performance-main/src/Components/Text-Area/Text-Area.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport FileUpload from \"../File/File.component\";\nimport './Text-Area.styles.css';\n\nfunction TextArea() {\n    const [text, setText] = useState(\"\");\n    const [inputValues, setInputValues] = useState([]);\n\n    // Function to handle changes in input values\n    const handleInputChange = (index, value) => {\n        const newInputValues = [...inputValues];\n        newInputValues[index] = value;\n        setInputValues(newInputValues);\n    };\n\n    const handleTextAreaChange = async (e) => {\n        setText(e.target.value);\n    };\n\n    async function compileAndDeploy() {\n        const params = {\n            contractName: 'Storage',\n            sourceCode: text,\n            network: 'Something'\n        }\n        try {\n            console.log(\"At text area\");\n            const response = await axios.get('http://10.1.33.124:8000/compile-and-deploy', { params });\n            console.log(response.data);\n            if (response.data.result.abi) {\n                window.alert('Compiled successfully');\n            }\n            else {\n                window.alert(response.data.result);\n            }\n            // Find the constructor in the ABI\n            let args = [];\n            let numInputs = 0;\n            const abi = response.data.result.abi;\n            const bytecode = response.data.result.bytecode;\n            const constructor = abi.find(item => item.type === 'constructor');\n            if (constructor) {\n                // Access constructor parameters and their types\n                const constructorInputs = constructor.inputs || [];\n                console.log('Constructor Parameters:');\n                constructorInputs.forEach(param => {\n                    console.log(`Name: ${param.name}, Type: ${param.type}`);\n                });\n                numInputs = constructor.inputs.length;\n            } else {\n                console.log('No constructor found in the ABI.');\n            }\n            console.log('Constructor Inputs', numInputs);\n\n            // Generate input boxes based on constructor inputs\n            const inputBoxes = constructor.inputs.map((param, index) => (\n                <div key={index}>\n                    <label>{param.name}</label>\n                    <input\n                        type=\"text\"\n                        placeholder={param.type}\n                        value={inputValues[index] || ''}\n                        onChange={(e) => handleInputChange(index, e.target.value)}\n                    />\n                </div>\n            ));\n\n            // Render the input boxes\n            return (\n                <div>\n                    {inputBoxes}\n                    <button onClick={deployContract}>Deploy Contract</button>\n                </div>\n            );\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return (\n        <div className=\"text-area\">\n            <h4>Paste your code below:</h4>\n            <textarea\n                className=\"inner\"\n                id=\"large-text\"\n                name=\"large-text\"\n                rows=\"25\"\n                cols=\"70\"\n                value={text}\n                onChange={handleTextAreaChange}\n            ></textarea>\n            <br />\n            <h4>Or upload the code file here:</h4>\n            <FileUpload></FileUpload>\n            <button className=\"compile-button\" onClick={compileAndDeploy}> Compile & Deploy </button>\n        </div>\n    );\n}\n\nexport default TextArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}