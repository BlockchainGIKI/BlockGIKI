{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = () => {\n  _s();\n  const [selectedBlockchain, setSelectedBlockchain] = useState('');\n  const [endPoint, setEndPoint] = useState('');\n  const [metric, setSelectedMetric] = useState('');\n  const [selectedSmartContract, setSelectedSmartContract] = useState('');\n  const [transactions, setTransactions] = useState('');\n  const account = useSelector(selectAccount);\n  const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n  const handleBlockchainChange = e => {\n    setSelectedBlockchain(e.target.value);\n  };\n  const handleMetricChange = e => {\n    setSelectedMetric(e.target.value);\n  };\n  const handleContractChange = e => {\n    setSelectedSmartContract(e.target.value);\n  };\n  const handleChange = e => {\n    setEndPoint(e.target.value);\n  };\n  const handleTransactionsChange = e => {\n    setTransactions(e.target.value);\n  };\n  async function measureMetrics() {\n    const selectedAccount = account;\n    const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n    const web3 = new Web3(config[selectedBlockchain]['RPC']);\n    const contract = new web3.eth.Contract(abi, ContractAddress);\n    switch (metric) {\n      case 'Latency':\n        if (selectedSmartContract === 'default') {\n          const startTime = performance.now();\n          const response = await contract.methods[selectedSmartContract](1).call();\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(response);\n          console.log('Latency: ', latency);\n        } else {\n          console.log('At latnecy else');\n          var gas = 0;\n          var data = '';\n          switch (selectedSmartContract) {\n            case 'createUser':\n              data = benchmark_contract.methods.createUser(\"John Doe\", 100).encodeABI();\n              gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n              break;\n            case 'issueMoney':\n              data = benchmark_contract.methods.issueMoney(100, 1).encodeABI();\n              gas = await contract.methods.issueMoney(100, 1).estimateGas();\n              break;\n            case 'transferMoney':\n              data = benchmark_contract.methods.transferMoney(1, 1, 2).encodeABI();\n              gas = await contract.methods.transferMoney(1, 1, 2).estimateGas();\n              break;\n          }\n          const signedTx = await web3.eth.accounts.signTransaction({\n            to: ContractAddress,\n            data: data,\n            gas: gas,\n            gasPrice: '70000000000',\n            from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538'\n          }, REACT_APP_PRIVATE_KEY);\n          try {\n            const startTime = performance.now();\n            const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n            const endTime = performance.now();\n            const latency = (endTime - startTime) / 1000;\n            console.log(receipt);\n            console.log('Latency: ', latency);\n            console.log('Transaction Fee: ', transactionFee);\n            return {\n              latency,\n              transactionFee\n            };\n          } catch (error) {\n            console.log(\"Error: \", error);\n          }\n        }\n        break;\n      case 'Throughput':\n        console.log('Input Batch: ', selectedBatch);\n        const promises = [];\n        const nonce = await web3.eth.getTransactionCount(selectedAccount);\n        // const gas = await contract.methods[selectedFunction](...functionInputValues).estimateGas();\n        for (let i = 0; i < Number(selectedBatch); i++) {\n          if (ftn[0].stateMutability === 'pure' || ftn[0].stateMutability === 'view') {\n            console.log('AT if TPS');\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const response = await contract.methods[selectedFunction](...functionInputValues).call();\n                // console.log('TPS response: ', response);\n                resolve(response);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          } else {\n            const transactionObject = {\n              from: selectedAccount,\n              gas,\n              gasPrice: '70000000000',\n              nonce: Number(nonce) + i\n            };\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const receipt = await contract.methods[selectedFunction](...functionInputValues).send(transactionObject);\n                // console.log('TPS response: ', response);\n                resolve(receipt);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          }\n        }\n        const startTime = performance.now();\n        Promise.all(promises).then(receipts => {\n          const endTime = performance.now();\n          const duration = (endTime - startTime) / 1000;\n          const throughput = Number(selectedBatch) / duration;\n          console.log(`Transactions Per Second (TPS): ${throughput}`);\n          console.log(receipts);\n          // resolve({ throughput, receipts });\n        }).catch(error => {\n          console.error('Error:', error);\n          // reject(error);\n        });\n    }\n  }\n\n  async function requestAccount() {\n    console.log(\"At standard button: \", selectedSmartContract);\n    if (account) {} else {\n      const api = {\n        status: false,\n        url: endPoint\n      };\n      const address = {\n        status: false,\n        address: '0x'\n      };\n      const params = {\n        metric: metric,\n        network: selectedBlockchain,\n        API: api,\n        address: address,\n        transactions: transactions,\n        function_name: selectedSmartContract\n      };\n      try {\n        const response = await axios.get('http://10.1.33.124:8000/run-node-script', {\n          params\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Blockchain: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBlockchain,\n      onChange: handleBlockchainChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Arbitum-Goerli\",\n        children: \"Arbitum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Celo\",\n        children: \"Alfajores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Linea-Goerli\",\n        children: \"Linea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Optimism-Goerli\",\n        children: \"Optimism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Polygon-Mumbai\",\n        children: \"Mumbai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sepolia\",\n        children: \"Sepolia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-25\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter end point API key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-75\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"endPoint\",\n          value: endPoint,\n          onChange: handleChange,\n          placeholder: \"Type Endpoint API key\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Performance metric: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: metric,\n      onChange: handleMetricChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Latency\",\n        children: \"Latency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Throughput\",\n        children: \"Throughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 31\n    }, this), (metric === \"throughput\" || metric === \"both\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"No. of transactions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactions,\n        onChange: handleTransactionsChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Default smart contracts: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSmartContract,\n      onChange: handleContractChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"createUser\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"issueMoney\",\n        children: \"Issue money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"transferMoney\",\n        children: \"Transfer Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"Get User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"compute-button\",\n      onClick: requestAccount,\n      children: \" Compute \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(MainDashboard, \"bDnbx0zs178iEUO0eU1CDcwik2k=\", false, function () {\n  return [useSelector];\n});\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","axios","useSelector","selectAccount","abi","config","Web3","jsxDEV","_jsxDEV","MainDashboard","_s","selectedBlockchain","setSelectedBlockchain","endPoint","setEndPoint","metric","setSelectedMetric","selectedSmartContract","setSelectedSmartContract","transactions","setTransactions","account","defaultAccount","handleBlockchainChange","e","target","value","handleMetricChange","handleContractChange","handleChange","handleTransactionsChange","measureMetrics","selectedAccount","ContractAddress","web3","contract","eth","Contract","startTime","performance","now","response","methods","call","endTime","latency","console","log","gas","data","benchmark_contract","createUser","encodeABI","estimateGas","issueMoney","transferMoney","signedTx","accounts","signTransaction","to","gasPrice","from","REACT_APP_PRIVATE_KEY","receipt","sendSignedTransaction","rawTransaction","transactionFee","utils","fromWei","effectiveGasPrice","gasUsed","error","selectedBatch","promises","nonce","getTransactionCount","i","Number","ftn","stateMutability","push","Promise","resolve","reject","selectedFunction","functionInputValues","transactionObject","send","all","then","receipts","duration","throughput","catch","requestAccount","api","status","url","address","params","network","API","function_name","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","name","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\n\nconst MainDashboard = () => {\n\n    const [selectedBlockchain, setSelectedBlockchain] = useState('');\n    const [endPoint, setEndPoint] = useState('');\n    const [metric, setSelectedMetric] = useState('');\n    const [selectedSmartContract, setSelectedSmartContract] = useState('');\n    const [transactions, setTransactions] = useState('');\n    const account = useSelector(selectAccount);\n    const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n\n    const handleBlockchainChange = (e) => {\n        setSelectedBlockchain(e.target.value);\n    };\n\n    const handleMetricChange = (e) => {\n        setSelectedMetric(e.target.value);\n    };\n\n    const handleContractChange = (e) => {\n        setSelectedSmartContract(e.target.value);\n    };\n\n    const handleChange = (e) => {\n        setEndPoint(e.target.value)\n    };\n\n    const handleTransactionsChange = (e) => {\n        setTransactions(e.target.value);\n    };\n\n    async function measureMetrics() {\n        const selectedAccount = account;\n        const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n        const web3 = new Web3(config[selectedBlockchain]['RPC']);\n        const contract = new web3.eth.Contract(abi, ContractAddress);\n        switch (metric) {\n            case 'Latency':\n                if (selectedSmartContract === 'default') {\n                    const startTime = performance.now();\n                    const response = await contract.methods[selectedSmartContract](1).call();\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(response);\n                    console.log('Latency: ', latency);\n                }\n                else {\n                    console.log('At latnecy else');\n                    var gas = 0;\n                    var data = '';\n                    switch (selectedSmartContract) {\n                        case 'createUser':\n                            data = benchmark_contract.methods.createUser(\"John Doe\", 100).encodeABI();\n                            gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n                            break;\n                        case 'issueMoney':\n                            data = benchmark_contract.methods.issueMoney(100, 1).encodeABI();\n                            gas = await contract.methods.issueMoney(100, 1).estimateGas()\n                            break;\n                        case 'transferMoney':\n                            data = benchmark_contract.methods.transferMoney(1, 1, 2).encodeABI();\n                            gas = await contract.methods.transferMoney(1, 1, 2).estimateGas()\n                            break;\n                    }\n                    const signedTx = await web3.eth.accounts.signTransaction({\n                        to: ContractAddress,\n                        data: data,\n                        gas: gas,\n                        gasPrice: '70000000000',\n                        from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538',\n                    }, REACT_APP_PRIVATE_KEY);\n                    try {\n                        const startTime = performance.now();\n                        const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                        const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                        const endTime = performance.now();\n                        const latency = (endTime - startTime) / 1000;\n                        console.log(receipt);\n                        console.log('Latency: ', latency);\n                        console.log('Transaction Fee: ', transactionFee);\n                        return ({ latency, transactionFee });\n                    }\n                    catch (error) {\n                        console.log(\"Error: \", error);\n                    }\n                }\n                break;\n            case 'Throughput':\n                console.log('Input Batch: ', selectedBatch);\n                const promises = [];\n                const nonce = await web3.eth.getTransactionCount(selectedAccount);\n                // const gas = await contract.methods[selectedFunction](...functionInputValues).estimateGas();\n                for (let i = 0; i < Number(selectedBatch); i++) {\n                    if (ftn[0].stateMutability === 'pure' || ftn[0].stateMutability === 'view') {\n                        console.log('AT if TPS');\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const response = await contract.methods[selectedFunction](...functionInputValues).call();\n                                // console.log('TPS response: ', response);\n                                resolve(response);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                    else {\n                        const transactionObject = {\n                            from: selectedAccount,\n                            gas,\n                            gasPrice: '70000000000',\n                            nonce: Number(nonce) + i\n                        };\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const receipt = await contract.methods[selectedFunction](...functionInputValues).send(transactionObject);\n                                // console.log('TPS response: ', response);\n                                resolve(receipt);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                }\n                const startTime = performance.now();\n                Promise.all(promises)\n                    .then((receipts) => {\n                        const endTime = performance.now();\n                        const duration = (endTime - startTime) / 1000;\n                        const throughput = Number(selectedBatch) / duration;\n                        console.log(`Transactions Per Second (TPS): ${throughput}`);\n                        console.log(receipts);\n                        // resolve({ throughput, receipts });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        // reject(error);\n                    });\n        }\n\n    }\n\n\n    async function requestAccount() {\n        console.log(\"At standard button: \", selectedSmartContract);\n        if (account) {\n\n        }\n        else {\n            const api = {\n                status: false,\n                url: endPoint,\n            }\n            const address = {\n                status: false,\n                address: '0x'\n            }\n            const params = {\n                metric: metric,\n                network: selectedBlockchain,\n                API: api,\n                address: address,\n                transactions: transactions,\n                function_name: selectedSmartContract,\n            };\n            try {\n                const response = await axios.get('http://10.1.33.124:8000/run-node-script', { params });\n                console.log(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n    }\n\n    return (\n        <div className=\"card-main\">\n            <label>Select a Blockchain: </label>\n            <select value={selectedBlockchain} onChange={handleBlockchainChange}>\n                <option value=\"Arbitum-Goerli\">Arbitum</option>\n                <option value=\"Celo\">Alfajores</option>\n                <option value=\"Linea-Goerli\">Linea</option>\n                <option value=\"Optimism-Goerli\">Optimism</option>\n                <option value=\"Polygon-Mumbai\">Mumbai</option>\n                <option value=\"Sepolia\">Sepolia</option>\n            </select><br></br><br></br>\n            <div className=\"row\">\n                <div className=\"col-25\">\n                    <label>Enter end point API key</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        name=\"endPoint\"\n                        value={endPoint}\n                        onChange={handleChange}\n                        placeholder=\"Type Endpoint API key\"\n                        required\n                    />\n                </div>\n            </div><br></br><br></br>\n            <label>Select a Performance metric: </label>\n            <select value={metric} onChange={handleMetricChange}>\n                <option value=\"Latency\">Latency</option>\n                <option value=\"Throughput\">Throughput</option>\n                <option value=\"default\">All</option>\n            </select><br></br><br></br>\n            {(metric === \"throughput\" || metric === \"both\") && (\n                <div>\n                    <label>No. of transactions: </label>\n                    <select value={transactions} onChange={handleTransactionsChange}>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                    </select><br></br><br></br>\n                </div>\n            )}\n            <label>Default smart contracts: </label>\n            <select value={selectedSmartContract} onChange={handleContractChange}>\n                <option value=\"createUser\">Create User</option>\n                <option value=\"issueMoney\">Issue money</option>\n                <option value=\"transferMoney\">Transfer Money</option>\n                <option value=\"default\">Get User</option>\n            </select><br></br><br></br>\n            <button className=\"compute-button\" onClick={requestAccount}> Compute </button>\n        </div>\n    )\n}\n\nexport default MainDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}