{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = () => {\n  _s();\n  const [selectedBlockchain, setSelectedBlockchain] = useState('');\n  const [endPoint, setEndPoint] = useState('');\n  const [metric, setSelectedMetric] = useState('');\n  const [selectedSmartContract, setSelectedSmartContract] = useState('');\n  const [transactions, setTransactions] = useState('');\n  const account = useSelector(selectAccount);\n  const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n  const handleBlockchainChange = e => {\n    setSelectedBlockchain(e.target.value);\n  };\n  const handleMetricChange = e => {\n    setSelectedMetric(e.target.value);\n  };\n  const handleContractChange = e => {\n    setSelectedSmartContract(e.target.value);\n  };\n  const handleChange = e => {\n    setEndPoint(e.target.value);\n  };\n  const handleTransactionsChange = e => {\n    setTransactions(e.target.value);\n  };\n  async function measureMetrics() {\n    const selectedAccount = account;\n    const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n    const web3 = new Web3(config[selectedBlockchain]['RPC']);\n    const contract = new web3.eth.Contract(abi, ContractAddress);\n    var gas = 0;\n    var data = '';\n    switch (selectedSmartContract) {\n      case 'createUser':\n        data = contract.methods.createUser(\"John Doe\", 100).encodeABI();\n        gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n        break;\n      case 'issueMoney':\n        data = contract.methods.issueMoney(100, 1).encodeABI();\n        gas = await contract.methods.issueMoney(100, 1).estimateGas();\n        break;\n      case 'transferMoney':\n        data = contract.methods.transferMoney(1, 1, 2).encodeABI();\n        gas = await contract.methods.transferMoney(1, 1, 2).estimateGas();\n        break;\n      default:\n        break;\n    }\n    switch (metric) {\n      case 'Latency':\n        if (selectedSmartContract === 'default') {\n          const startTime = performance.now();\n          const response = await contract.methods[selectedSmartContract](1).call();\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(response);\n          console.log('Latency: ', latency);\n          const fee = 0;\n          return {\n            latency,\n            fee\n          };\n        } else {\n          console.log('At latnecy else');\n          const signedTx = await web3.eth.accounts.signTransaction({\n            to: ContractAddress,\n            data: data,\n            gas: gas,\n            gasPrice: '70000000000',\n            from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538'\n          }, process.env.REACT_APP_PRIVATE_KEY);\n          try {\n            const startTime = performance.now();\n            const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n            const endTime = performance.now();\n            const latency = (endTime - startTime) / 1000;\n            console.log(receipt);\n            console.log('Latency: ', latency);\n            console.log('Transaction Fee: ', transactionFee);\n            return {\n              latency,\n              transactionFee\n            };\n          } catch (error) {\n            console.log(\"Error: \", error);\n          }\n        }\n        break;\n      case 'Throughput':\n        const promises = [];\n        const nonce = await web3.eth.getTransactionCount(defaultAccount);\n        for (let i = 0; i < Number(transactions); i++) {\n          if (selectedSmartContract === 'default') {\n            console.log('AT if TPS');\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const response = await contract.methods[selectedSmartContract](1).call();\n                const fee = 0;\n                // console.log('TPS response: ', response);\n                resolve(response);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          } else {\n            const signedTx = await web3.eth.accounts.signTransaction({\n              to: ContractAddress,\n              data: data,\n              gas: gas,\n              gasPrice: '70000000000',\n              from: defaultAccount,\n              nonce: Number(nonce) + i\n            }, process.env.REACT_APP_PRIVATE_KEY);\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                // console.log('TPS response: ', response);\n                resolve(receipt);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          }\n        }\n        const startTime = performance.now();\n        Promise.all(promises).then(receipts => {\n          const endTime = performance.now();\n          const duration = (endTime - startTime) / 1000;\n          const throughput = Number(transactions) / duration;\n          console.log(`Transactions Per Second (TPS): ${throughput}`);\n          console.log(receipts);\n          return {\n            throughput,\n            receipts\n          };\n        }).catch(error => {\n          console.error('Error:', error);\n          // reject(error);\n        });\n    }\n  }\n\n  async function requestAccount() {\n    console.log(\"At standard button: \", selectedSmartContract);\n    if (account) {\n      const {\n        perf_metric,\n        fee\n      } = await measureMetrics();\n      if (metric == 'Throughput') {\n        let txFee = 0;\n        if (selectedSmartContract != 'default') {\n          for (let i = 0; i < transactions; i++) {\n            txFee += Number(fee[i].effectiveGasPrice) * Number(fee[i].gasUsed);\n          }\n          txFee = txFee / transactions / 1e18;\n        }\n        fee = txFee;\n      }\n      try {\n        const params = {\n          perf_metric,\n          fee,\n          selectedBlockchain,\n          selectedSmartContract,\n          transactions,\n          perf_metric\n        };\n        const response = await axios.get('http://10.1.33.124:8000/write-to-metrics-csv', {\n          params\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    } else {\n      const api = {\n        status: false,\n        url: endPoint\n      };\n      const address = {\n        status: false,\n        address: '0x'\n      };\n      const params = {\n        metric: metric,\n        network: selectedBlockchain,\n        API: api,\n        address: address,\n        transactions: transactions,\n        function_name: selectedSmartContract\n      };\n      try {\n        const response = await axios.get('http://10.1.33.124:8000/run-node-script', {\n          params\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Blockchain: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBlockchain,\n      onChange: handleBlockchainChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Arbitum-Goerli\",\n        children: \"Arbitum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Celo\",\n        children: \"Alfajores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Linea-Goerli\",\n        children: \"Linea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Optimism-Goerli\",\n        children: \"Optimism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Polygon-Mumbai\",\n        children: \"Mumbai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sepolia\",\n        children: \"Sepolia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-25\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter end point API key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-75\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"endPoint\",\n          value: endPoint,\n          onChange: handleChange,\n          placeholder: \"Type Endpoint API key\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Performance metric: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: metric,\n      onChange: handleMetricChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Latency\",\n        children: \"Latency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Throughput\",\n        children: \"Throughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 31\n    }, this), (metric === \"throughput\" || metric === \"both\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"No. of transactions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactions,\n        onChange: handleTransactionsChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Default smart contracts: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSmartContract,\n      onChange: handleContractChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"createUser\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"issueMoney\",\n        children: \"Issue money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"transferMoney\",\n        children: \"Transfer Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"Get User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"compute-button\",\n      onClick: requestAccount,\n      children: \" Compute \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n_s(MainDashboard, \"bDnbx0zs178iEUO0eU1CDcwik2k=\", false, function () {\n  return [useSelector];\n});\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","axios","useSelector","selectAccount","abi","config","Web3","jsxDEV","_jsxDEV","MainDashboard","_s","selectedBlockchain","setSelectedBlockchain","endPoint","setEndPoint","metric","setSelectedMetric","selectedSmartContract","setSelectedSmartContract","transactions","setTransactions","account","defaultAccount","handleBlockchainChange","e","target","value","handleMetricChange","handleContractChange","handleChange","handleTransactionsChange","measureMetrics","selectedAccount","ContractAddress","web3","contract","eth","Contract","gas","data","methods","createUser","encodeABI","estimateGas","issueMoney","transferMoney","startTime","performance","now","response","call","endTime","latency","console","log","fee","signedTx","accounts","signTransaction","to","gasPrice","from","process","env","REACT_APP_PRIVATE_KEY","receipt","sendSignedTransaction","rawTransaction","transactionFee","utils","fromWei","effectiveGasPrice","gasUsed","error","promises","nonce","getTransactionCount","i","Number","push","Promise","resolve","reject","all","then","receipts","duration","throughput","catch","requestAccount","perf_metric","txFee","params","get","api","status","url","address","network","API","function_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","name","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\n\nconst MainDashboard = () => {\n\n    const [selectedBlockchain, setSelectedBlockchain] = useState('');\n    const [endPoint, setEndPoint] = useState('');\n    const [metric, setSelectedMetric] = useState('');\n    const [selectedSmartContract, setSelectedSmartContract] = useState('');\n    const [transactions, setTransactions] = useState('');\n    const account = useSelector(selectAccount);\n    const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n\n    const handleBlockchainChange = (e) => {\n        setSelectedBlockchain(e.target.value);\n    };\n\n    const handleMetricChange = (e) => {\n        setSelectedMetric(e.target.value);\n    };\n\n    const handleContractChange = (e) => {\n        setSelectedSmartContract(e.target.value);\n    };\n\n    const handleChange = (e) => {\n        setEndPoint(e.target.value)\n    };\n\n    const handleTransactionsChange = (e) => {\n        setTransactions(e.target.value);\n    };\n\n    async function measureMetrics() {\n        const selectedAccount = account;\n        const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n        const web3 = new Web3(config[selectedBlockchain]['RPC']);\n        const contract = new web3.eth.Contract(abi, ContractAddress);\n        var gas = 0;\n        var data = '';\n        switch (selectedSmartContract) {\n            case 'createUser':\n                data = contract.methods.createUser(\"John Doe\", 100).encodeABI();\n                gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n                break;\n            case 'issueMoney':\n                data = contract.methods.issueMoney(100, 1).encodeABI();\n                gas = await contract.methods.issueMoney(100, 1).estimateGas()\n                break;\n            case 'transferMoney':\n                data = contract.methods.transferMoney(1, 1, 2).encodeABI();\n                gas = await contract.methods.transferMoney(1, 1, 2).estimateGas()\n                break;\n            default:\n                break;\n        }\n        switch (metric) {\n            case 'Latency':\n                if (selectedSmartContract === 'default') {\n                    const startTime = performance.now();\n                    const response = await contract.methods[selectedSmartContract](1).call();\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(response);\n                    console.log('Latency: ', latency);\n                    const fee = 0;\n                    return ({ latency, fee });\n                }\n                else {\n                    console.log('At latnecy else');\n                    const signedTx = await web3.eth.accounts.signTransaction({\n                        to: ContractAddress,\n                        data: data,\n                        gas: gas,\n                        gasPrice: '70000000000',\n                        from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538',\n                    }, process.env.REACT_APP_PRIVATE_KEY);\n                    try {\n                        const startTime = performance.now();\n                        const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                        const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                        const endTime = performance.now();\n                        const latency = (endTime - startTime) / 1000;\n                        console.log(receipt);\n                        console.log('Latency: ', latency);\n                        console.log('Transaction Fee: ', transactionFee);\n                        return ({ latency, transactionFee });\n                    }\n                    catch (error) {\n                        console.log(\"Error: \", error);\n                    }\n                }\n                break;\n            case 'Throughput':\n                const promises = [];\n                const nonce = await web3.eth.getTransactionCount(defaultAccount);\n                for (let i = 0; i < Number(transactions); i++) {\n                    if (selectedSmartContract === 'default') {\n                        console.log('AT if TPS');\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const response = await contract.methods[selectedSmartContract](1).call()\n                                const fee = 0;\n                                // console.log('TPS response: ', response);\n                                resolve(response);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                    else {\n                        const signedTx = await web3.eth.accounts.signTransaction({\n                            to: ContractAddress,\n                            data: data,\n                            gas: gas,\n                            gasPrice: '70000000000',\n                            from: defaultAccount,\n                            nonce: Number(nonce) + i\n                        }, process.env.REACT_APP_PRIVATE_KEY);\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                                // console.log('TPS response: ', response);\n                                resolve(receipt);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                }\n                const startTime = performance.now();\n                Promise.all(promises)\n                    .then((receipts) => {\n                        const endTime = performance.now();\n                        const duration = (endTime - startTime) / 1000;\n                        const throughput = Number(transactions) / duration;\n                        console.log(`Transactions Per Second (TPS): ${throughput}`);\n                        console.log(receipts);\n                        return ({ throughput, receipts });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        // reject(error);\n                    });\n        }\n\n    }\n\n\n    async function requestAccount() {\n        console.log(\"At standard button: \", selectedSmartContract);\n        if (account) {\n            const { perf_metric, fee } = await measureMetrics();\n            if (metric == 'Throughput') {\n                let txFee = 0;\n                if (selectedSmartContract != 'default') {\n                    for (let i = 0; i < transactions; i++) {\n                        txFee += Number(fee[i].effectiveGasPrice) * Number(fee[i].gasUsed);\n                    }\n                    txFee = (txFee / transactions) / 1e18;\n                }\n                fee = txFee;\n            }\n            try {\n                const params = {\n                    perf_metric, fee, selectedBlockchain, selectedSmartContract, transactions, perf_metric\n                };\n                const response = await axios.get('http://10.1.33.124:8000/write-to-metrics-csv', { params });\n                console.log(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n        else {\n            const api = {\n                status: false,\n                url: endPoint,\n            }\n            const address = {\n                status: false,\n                address: '0x'\n            }\n            const params = {\n                metric: metric,\n                network: selectedBlockchain,\n                API: api,\n                address: address,\n                transactions: transactions,\n                function_name: selectedSmartContract,\n            };\n            try {\n                const response = await axios.get('http://10.1.33.124:8000/run-node-script', { params });\n                console.log(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n    }\n\n    return (\n        <div className=\"card-main\">\n            <label>Select a Blockchain: </label>\n            <select value={selectedBlockchain} onChange={handleBlockchainChange}>\n                <option value=\"Arbitum-Goerli\">Arbitum</option>\n                <option value=\"Celo\">Alfajores</option>\n                <option value=\"Linea-Goerli\">Linea</option>\n                <option value=\"Optimism-Goerli\">Optimism</option>\n                <option value=\"Polygon-Mumbai\">Mumbai</option>\n                <option value=\"Sepolia\">Sepolia</option>\n            </select><br></br><br></br>\n            <div className=\"row\">\n                <div className=\"col-25\">\n                    <label>Enter end point API key</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        name=\"endPoint\"\n                        value={endPoint}\n                        onChange={handleChange}\n                        placeholder=\"Type Endpoint API key\"\n                        required\n                    />\n                </div>\n            </div><br></br><br></br>\n            <label>Select a Performance metric: </label>\n            <select value={metric} onChange={handleMetricChange}>\n                <option value=\"Latency\">Latency</option>\n                <option value=\"Throughput\">Throughput</option>\n                <option value=\"default\">All</option>\n            </select><br></br><br></br>\n            {(metric === \"throughput\" || metric === \"both\") && (\n                <div>\n                    <label>No. of transactions: </label>\n                    <select value={transactions} onChange={handleTransactionsChange}>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                    </select><br></br><br></br>\n                </div>\n            )}\n            <label>Default smart contracts: </label>\n            <select value={selectedSmartContract} onChange={handleContractChange}>\n                <option value=\"createUser\">Create User</option>\n                <option value=\"issueMoney\">Issue money</option>\n                <option value=\"transferMoney\">Transfer Money</option>\n                <option value=\"default\">Get User</option>\n            </select><br></br><br></br>\n            <button className=\"compute-button\" onClick={requestAccount}> Compute </button>\n        </div>\n    )\n}\n\nexport default MainDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}