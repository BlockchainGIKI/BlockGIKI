{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Performance-main/src/Components/Text-Area/Text-Area.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport FileUpload from \"../File/File.component\";\nimport './Text-Area.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextArea() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const handleTextAreaChange = async e => {\n    setText(e.target.value);\n  };\n  async function compileAndDeploy() {\n    const params = {\n      contractName: 'Storage',\n      sourceCode: text,\n      network: 'Something'\n    };\n    try {\n      console.log(\"At text area\");\n      const response = await axios.get('http://10.1.33.124:8000/compile-and-deploy', {\n        params\n      });\n      console.log(response.data);\n      if (response.data.result.abi) {\n        window.alert('Compiled successfully');\n      } else {\n        window.alert(response.data.result);\n      }\n      // Find the constructor in the ABI\n      let args = [];\n      const constructor = abi.find(item => item.type === 'constructor');\n      if (constructor) {\n        // Access constructor parameters and their types\n        const constructorInputs = constructor.inputs || [];\n        console.log('Constructor Parameters:');\n        constructorInputs.forEach(param => {\n          console.log(`Name: ${param.name}, Type: ${param.type}`);\n        });\n      } else {\n        console.log('No constructor found in the ABI.');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Paste your code below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"inner\",\n      id: \"large-text\",\n      name: \"large-text\",\n      rows: \"25\",\n      cols: \"70\",\n      value: text,\n      onChange: handleTextAreaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Or upload the code file here:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"compile-button\",\n      onClick: compileAndDeploy,\n      children: \" Compile & Deploy \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(TextArea, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","axios","FileUpload","jsxDEV","_jsxDEV","TextArea","_s","text","setText","handleTextAreaChange","e","target","value","compileAndDeploy","params","contractName","sourceCode","network","console","log","response","get","data","result","abi","window","alert","args","constructor","find","item","type","constructorInputs","inputs","forEach","param","name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","cols","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/user/Documents/Performance-main/src/Components/Text-Area/Text-Area.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport FileUpload from \"../File/File.component\";\nimport './Text-Area.styles.css';\n\nfunction TextArea() {\n    const [text, setText] = useState(\"\");\n\n    const handleTextAreaChange = async (e) => {\n        setText(e.target.value);\n    };\n\n    async function compileAndDeploy() {\n        const params = {\n            contractName: 'Storage',\n            sourceCode: text,\n            network: 'Something'\n        }\n        try {\n            console.log(\"At text area\");\n            const response = await axios.get('http://10.1.33.124:8000/compile-and-deploy', { params });\n            console.log(response.data);\n            if (response.data.result.abi) {\n                window.alert('Compiled successfully');\n            }\n            else {\n                window.alert(response.data.result);\n            }\n            // Find the constructor in the ABI\n            let args = [];\n            const constructor = abi.find(item => item.type === 'constructor');\n            if (constructor) {\n                // Access constructor parameters and their types\n                const constructorInputs = constructor.inputs || [];\n                console.log('Constructor Parameters:');\n                constructorInputs.forEach(param => {\n                    console.log(`Name: ${param.name}, Type: ${param.type}`);\n                });\n            } else {\n                console.log('No constructor found in the ABI.');\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return (\n        <div className=\"text-area\">\n            <h4>Paste your code below:</h4>\n            <textarea\n                className=\"inner\"\n                id=\"large-text\"\n                name=\"large-text\"\n                rows=\"25\"\n                cols=\"70\"\n                value={text}\n                onChange={handleTextAreaChange}\n            ></textarea>\n            <br />\n            <h4>Or upload the code file here:</h4>\n            <FileUpload></FileUpload>\n            <button className=\"compile-button\" onClick={compileAndDeploy}> Compile & Deploy </button>\n        </div>\n    );\n}\n\nexport default TextArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}