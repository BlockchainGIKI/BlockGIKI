{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = () => {\n  _s();\n  const [selectedBlockchain, setSelectedBlockchain] = useState('');\n  const [endPoint, setEndPoint] = useState('');\n  const [metric, setSelectedMetric] = useState('');\n  const [selectedSmartContract, setSelectedSmartContract] = useState('');\n  const [transactions, setTransactions] = useState('');\n  const account = useSelector(selectAccount);\n  const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n  const handleBlockchainChange = e => {\n    setSelectedBlockchain(e.target.value);\n  };\n  const handleMetricChange = e => {\n    setSelectedMetric(e.target.value);\n  };\n  const handleContractChange = e => {\n    setSelectedSmartContract(e.target.value);\n  };\n  const handleChange = e => {\n    setEndPoint(e.target.value);\n  };\n  const handleTransactionsChange = e => {\n    setTransactions(e.target.value);\n  };\n  async function measureMetrics() {\n    const selectedAccount = account;\n    const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n    const web3 = new Web3(config[selectedBlockchain]['RPC']);\n    const contract = new web3.eth.Contract(abi, ContractAddress);\n    var gas = 0;\n    var transactionObject = {};\n    switch (selectedSmartContract) {\n      case 'createUser':\n        gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n        transactionObject = {\n          from: selectedAccount,\n          gas,\n          gasPrice: '70000000000'\n        };\n        try {\n          const startTime = performance.now();\n          const receipt = await contract.methods.createUser(\"John Doe\", 100).send(transactionObject);\n          const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(receipt);\n          console.log('Latency: ', latency);\n          console.log('Transaction Fee: ', transactionFee);\n          return {\n            latency,\n            transactionFee\n          };\n        } catch (error) {\n          console.log(\"Error: \", error);\n        }\n        break;\n      case 'issueMoney':\n        gas = await contract.methods.issueMoney(100, 1).estimateGas();\n        transactionObject = {\n          from: selectedAccount,\n          gas,\n          gasPrice: '70000000000'\n        };\n        try {\n          const startTime = performance.now();\n          const receipt = await contract.methods.issueMoney(100, 1).send(transactionObject);\n          const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(receipt);\n          console.log('Latency: ', latency);\n          console.log('Transaction Fee: ', transactionFee);\n          return {\n            latency,\n            transactionFee\n          };\n        } catch (error) {\n          console.log(\"Error: \", error);\n        }\n        break;\n      case 'transferMoney':\n        gas = await contract.methods.transferMoney(1, 1, 2).estimateGas();\n        transactionObject = {\n          from: selectedAccount,\n          gas,\n          gasPrice: '70000000000'\n        };\n        try {\n          const startTime = performance.now();\n          const receipt = await contract.methods.issueMoney(100, 1).send(transactionObject);\n          const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(receipt);\n          console.log('Latency: ', latency);\n          console.log('Transaction Fee: ', transactionFee);\n          return {\n            latency,\n            transactionFee\n          };\n        } catch (error) {\n          console.log(\"Error: \", error);\n        }\n        break;\n      default:\n        break;\n    }\n    switch (metric) {\n      case 'Latency':\n        if (selectedSmartContract === 'getUser') {\n          const startTime = performance.now();\n          console.log(selectedSmartContract);\n          const response = await contract.methods[selectedSmartContract](1).call();\n          const endTime = performance.now();\n          const latency = (endTime - startTime) / 1000;\n          console.log(response);\n          console.log('Latency: ', latency);\n          const fee = 0;\n          return {\n            latency,\n            fee\n          };\n        } else {\n          console.log('At latnecy else');\n          const signedTx = await web3.eth.accounts.signTransaction({\n            to: ContractAddress,\n            data: data,\n            gas: gas,\n            gasPrice: '70000000000',\n            from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538'\n          }, process.env.REACT_APP_PRIVATE_KEY);\n          try {\n            const startTime = performance.now();\n            const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n            const endTime = performance.now();\n            const latency = (endTime - startTime) / 1000;\n            console.log(receipt);\n            console.log('Latency: ', latency);\n            console.log('Transaction Fee: ', transactionFee);\n            return {\n              latency,\n              transactionFee\n            };\n          } catch (error) {\n            console.log(\"Error: \", error);\n          }\n        }\n        break;\n      case 'Throughput':\n        const promises = [];\n        const nonce = await web3.eth.getTransactionCount(defaultAccount);\n        for (let i = 0; i < Number(transactions); i++) {\n          if (selectedSmartContract === 'getUser') {\n            console.log('AT if TPS');\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const response = await contract.methods[selectedSmartContract](1).call();\n                const fee = 0;\n                // console.log('TPS response: ', response);\n                resolve(response);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          } else {\n            const signedTx = await web3.eth.accounts.signTransaction({\n              to: ContractAddress,\n              data: data,\n              gas: gas,\n              gasPrice: '70000000000',\n              from: defaultAccount,\n              nonce: Number(nonce) + i\n            }, process.env.REACT_APP_PRIVATE_KEY);\n            promises.push(new Promise(async (resolve, reject) => {\n              try {\n                const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                // console.log('TPS response: ', response);\n                resolve(receipt);\n              } catch (error) {\n                reject(error);\n              }\n            }));\n          }\n        }\n        const startTime = performance.now();\n        Promise.all(promises).then(receipts => {\n          const endTime = performance.now();\n          const duration = (endTime - startTime) / 1000;\n          const throughput = Number(transactions) / duration;\n          console.log(`Transactions Per Second (TPS): ${throughput}`);\n          console.log(receipts);\n          return {\n            throughput,\n            receipts\n          };\n        }).catch(error => {\n          console.error('Error:', error);\n          // reject(error);\n        });\n    }\n  }\n\n  async function requestAccount() {\n    console.log(\"At standard button: \", selectedSmartContract);\n    if (account) {\n      const {\n        perf_metric,\n        fee\n      } = await measureMetrics();\n      let txFee = 0;\n      if (metric === 'Throughput') {\n        if (selectedSmartContract !== 'getUser') {\n          for (let i = 0; i < transactions; i++) {\n            txFee += Number(fee[i].effectiveGasPrice) * Number(fee[i].gasUsed);\n          }\n          txFee = txFee / transactions / 1e18;\n        }\n      }\n      try {\n        const params = {\n          perf_metric,\n          txFee,\n          selectedBlockchain,\n          selectedSmartContract,\n          transactions,\n          perf_metric\n        };\n        const response = await axios.get('http://10.1.33.124:8000/write-to-metrics-csv', {\n          params\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    } else {\n      const api = {\n        status: false,\n        url: endPoint\n      };\n      const address = {\n        status: false,\n        address: '0x'\n      };\n      const params = {\n        metric: metric,\n        network: selectedBlockchain,\n        API: api,\n        address: address,\n        transactions: transactions,\n        function_name: selectedSmartContract\n      };\n      try {\n        const response = await axios.get('http://10.1.33.124:8000/run-node-script', {\n          params\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Blockchain: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBlockchain,\n      onChange: handleBlockchainChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Arbitum-Goerli\",\n        children: \"Arbitum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Celo\",\n        children: \"Alfajores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Linea-Goerli\",\n        children: \"Linea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Optimism-Goerli\",\n        children: \"Optimism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Polygon-Mumbai\",\n        children: \"Mumbai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sepolia\",\n        children: \"Sepolia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-25\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter end point API key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-75\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"endPoint\",\n          value: endPoint,\n          onChange: handleChange,\n          placeholder: \"Type Endpoint API key\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Performance metric: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: metric,\n      onChange: handleMetricChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Latency\",\n        children: \"Latency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Throughput\",\n        children: \"Throughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 31\n    }, this), (metric === \"throughput\" || metric === \"both\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"No. of transactions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactions,\n        onChange: handleTransactionsChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Default smart contracts: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSmartContract,\n      onChange: handleContractChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"createUser\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"issueMoney\",\n        children: \"Issue money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"transferMoney\",\n        children: \"Transfer Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"getUser\",\n        children: \"Get User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"compute-button\",\n      onClick: requestAccount,\n      children: \" Compute \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n_s(MainDashboard, \"bDnbx0zs178iEUO0eU1CDcwik2k=\", false, function () {\n  return [useSelector];\n});\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","axios","useSelector","selectAccount","abi","config","Web3","jsxDEV","_jsxDEV","MainDashboard","_s","selectedBlockchain","setSelectedBlockchain","endPoint","setEndPoint","metric","setSelectedMetric","selectedSmartContract","setSelectedSmartContract","transactions","setTransactions","account","defaultAccount","handleBlockchainChange","e","target","value","handleMetricChange","handleContractChange","handleChange","handleTransactionsChange","measureMetrics","selectedAccount","ContractAddress","web3","contract","eth","Contract","gas","transactionObject","methods","createUser","estimateGas","from","gasPrice","startTime","performance","now","receipt","send","transactionFee","utils","fromWei","effectiveGasPrice","gasUsed","endTime","latency","console","log","error","issueMoney","transferMoney","response","call","fee","signedTx","accounts","signTransaction","to","data","process","env","REACT_APP_PRIVATE_KEY","sendSignedTransaction","rawTransaction","promises","nonce","getTransactionCount","i","Number","push","Promise","resolve","reject","all","then","receipts","duration","throughput","catch","requestAccount","perf_metric","txFee","params","get","api","status","url","address","network","API","function_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","name","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/home/user/Documents/Performance-main/src/Components/Main-Dashboard/Main-dashboard.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Main-dashboard.styles.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectAccount } from \"../../accountSlice\";\nimport abi from './Contract';\nimport config from './constants';\nimport Web3 from \"web3\";\n\nconst MainDashboard = () => {\n\n    const [selectedBlockchain, setSelectedBlockchain] = useState('');\n    const [endPoint, setEndPoint] = useState('');\n    const [metric, setSelectedMetric] = useState('');\n    const [selectedSmartContract, setSelectedSmartContract] = useState('');\n    const [transactions, setTransactions] = useState('');\n    const account = useSelector(selectAccount);\n    const defaultAccount = '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538';\n\n    const handleBlockchainChange = (e) => {\n        setSelectedBlockchain(e.target.value);\n    };\n\n    const handleMetricChange = (e) => {\n        setSelectedMetric(e.target.value);\n    };\n\n    const handleContractChange = (e) => {\n        setSelectedSmartContract(e.target.value);\n    };\n\n    const handleChange = (e) => {\n        setEndPoint(e.target.value)\n    };\n\n    const handleTransactionsChange = (e) => {\n        setTransactions(e.target.value);\n    };\n\n    async function measureMetrics() {\n        const selectedAccount = account;\n        const ContractAddress = config[selectedBlockchain]['ContractAddress'];\n        const web3 = new Web3(config[selectedBlockchain]['RPC']);\n        const contract = new web3.eth.Contract(abi, ContractAddress);\n        var gas = 0;\n        var transactionObject = {};\n        switch (selectedSmartContract) {\n            case 'createUser':\n                gas = await contract.methods.createUser(\"John Doe\", 100).estimateGas();\n                transactionObject = {\n                    from: selectedAccount,\n                    gas,\n                    gasPrice: '70000000000',\n                };\n                try {\n                    const startTime = performance.now();\n                    const receipt = await contract.methods.createUser(\"John Doe\", 100).send(transactionObject);\n                    const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(receipt);\n                    console.log('Latency: ', latency);\n                    console.log('Transaction Fee: ', transactionFee);\n                    return ({ latency, transactionFee });\n                }\n                catch (error) {\n                    console.log(\"Error: \", error);\n                }\n                break;\n            case 'issueMoney':\n                gas = await contract.methods.issueMoney(100, 1).estimateGas()\n                transactionObject = {\n                    from: selectedAccount,\n                    gas,\n                    gasPrice: '70000000000',\n                };\n                try {\n                    const startTime = performance.now();\n                    const receipt = await contract.methods.issueMoney(100, 1).send(transactionObject);\n                    const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(receipt);\n                    console.log('Latency: ', latency);\n                    console.log('Transaction Fee: ', transactionFee);\n                    return ({ latency, transactionFee });\n                }\n                catch (error) {\n                    console.log(\"Error: \", error);\n                }\n                break;\n            case 'transferMoney':\n                gas = await contract.methods.transferMoney(1, 1, 2).estimateGas()\n                transactionObject = {\n                    from: selectedAccount,\n                    gas,\n                    gasPrice: '70000000000',\n                };\n                try {\n                    const startTime = performance.now();\n                    const receipt = await contract.methods.issueMoney(100, 1).send(transactionObject);\n                    const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(receipt);\n                    console.log('Latency: ', latency);\n                    console.log('Transaction Fee: ', transactionFee);\n                    return ({ latency, transactionFee });\n                }\n                catch (error) {\n                    console.log(\"Error: \", error);\n                }\n                break;\n            default:\n                break;\n        }\n        switch (metric) {\n            case 'Latency':\n                if (selectedSmartContract === 'getUser') {\n                    const startTime = performance.now();\n                    console.log(selectedSmartContract);\n                    const response = await contract.methods[selectedSmartContract](1).call();\n                    const endTime = performance.now();\n                    const latency = (endTime - startTime) / 1000;\n                    console.log(response);\n                    console.log('Latency: ', latency);\n                    const fee = 0;\n                    return ({ latency, fee });\n                }\n                else {\n                    console.log('At latnecy else');\n                    const signedTx = await web3.eth.accounts.signTransaction({\n                        to: ContractAddress,\n                        data: data,\n                        gas: gas,\n                        gasPrice: '70000000000',\n                        from: '0x5719D02a5ebe5cA3AE722c703c24Ae5C845d0538',\n                    }, process.env.REACT_APP_PRIVATE_KEY);\n                    try {\n                        const startTime = performance.now();\n                        const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                        const transactionFee = web3.utils.fromWei(receipt.effectiveGasPrice * receipt.gasUsed, \"ether\");\n                        const endTime = performance.now();\n                        const latency = (endTime - startTime) / 1000;\n                        console.log(receipt);\n                        console.log('Latency: ', latency);\n                        console.log('Transaction Fee: ', transactionFee);\n                        return ({ latency, transactionFee });\n                    }\n                    catch (error) {\n                        console.log(\"Error: \", error);\n                    }\n                }\n                break;\n            case 'Throughput':\n                const promises = [];\n                const nonce = await web3.eth.getTransactionCount(defaultAccount);\n                for (let i = 0; i < Number(transactions); i++) {\n                    if (selectedSmartContract === 'getUser') {\n                        console.log('AT if TPS');\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const response = await contract.methods[selectedSmartContract](1).call()\n                                const fee = 0;\n                                // console.log('TPS response: ', response);\n                                resolve(response);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                    else {\n                        const signedTx = await web3.eth.accounts.signTransaction({\n                            to: ContractAddress,\n                            data: data,\n                            gas: gas,\n                            gasPrice: '70000000000',\n                            from: defaultAccount,\n                            nonce: Number(nonce) + i\n                        }, process.env.REACT_APP_PRIVATE_KEY);\n                        promises.push(new Promise(async (resolve, reject) => {\n                            try {\n                                const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n                                // console.log('TPS response: ', response);\n                                resolve(receipt);\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    }\n                }\n                const startTime = performance.now();\n                Promise.all(promises)\n                    .then((receipts) => {\n                        const endTime = performance.now();\n                        const duration = (endTime - startTime) / 1000;\n                        const throughput = Number(transactions) / duration;\n                        console.log(`Transactions Per Second (TPS): ${throughput}`);\n                        console.log(receipts);\n                        return ({ throughput, receipts });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        // reject(error);\n                    });\n        }\n\n    }\n\n\n    async function requestAccount() {\n        console.log(\"At standard button: \", selectedSmartContract);\n        if (account) {\n            const { perf_metric, fee } = await measureMetrics();\n            let txFee = 0;\n            if (metric === 'Throughput') {\n                if (selectedSmartContract !== 'getUser') {\n                    for (let i = 0; i < transactions; i++) {\n                        txFee += Number(fee[i].effectiveGasPrice) * Number(fee[i].gasUsed);\n                    }\n                    txFee = (txFee / transactions) / 1e18;\n                }\n            }\n            try {\n                const params = {\n                    perf_metric, txFee, selectedBlockchain, selectedSmartContract, transactions, perf_metric\n                };\n                const response = await axios.get('http://10.1.33.124:8000/write-to-metrics-csv', { params });\n                console.log(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n        else {\n            const api = {\n                status: false,\n                url: endPoint,\n            }\n            const address = {\n                status: false,\n                address: '0x'\n            }\n            const params = {\n                metric: metric,\n                network: selectedBlockchain,\n                API: api,\n                address: address,\n                transactions: transactions,\n                function_name: selectedSmartContract,\n            };\n            try {\n                const response = await axios.get('http://10.1.33.124:8000/run-node-script', { params });\n                console.log(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n    }\n\n    return (\n        <div className=\"card-main\">\n            <label>Select a Blockchain: </label>\n            <select value={selectedBlockchain} onChange={handleBlockchainChange}>\n                <option value=\"Arbitum-Goerli\">Arbitum</option>\n                <option value=\"Celo\">Alfajores</option>\n                <option value=\"Linea-Goerli\">Linea</option>\n                <option value=\"Optimism-Goerli\">Optimism</option>\n                <option value=\"Polygon-Mumbai\">Mumbai</option>\n                <option value=\"Sepolia\">Sepolia</option>\n            </select><br></br><br></br>\n            <div className=\"row\">\n                <div className=\"col-25\">\n                    <label>Enter end point API key</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        name=\"endPoint\"\n                        value={endPoint}\n                        onChange={handleChange}\n                        placeholder=\"Type Endpoint API key\"\n                        required\n                    />\n                </div>\n            </div><br></br><br></br>\n            <label>Select a Performance metric: </label>\n            <select value={metric} onChange={handleMetricChange}>\n                <option value=\"Latency\">Latency</option>\n                <option value=\"Throughput\">Throughput</option>\n                <option value=\"default\">All</option>\n            </select><br></br><br></br>\n            {(metric === \"throughput\" || metric === \"both\") && (\n                <div>\n                    <label>No. of transactions: </label>\n                    <select value={transactions} onChange={handleTransactionsChange}>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                    </select><br></br><br></br>\n                </div>\n            )}\n            <label>Default smart contracts: </label>\n            <select value={selectedSmartContract} onChange={handleContractChange}>\n                <option value=\"createUser\">Create User</option>\n                <option value=\"issueMoney\">Issue money</option>\n                <option value=\"transferMoney\">Transfer Money</option>\n                <option value=\"getUser\">Get User</option>\n            </select><br></br><br></br>\n            <button className=\"compute-button\" onClick={requestAccount}> Compute </button>\n        </div>\n    )\n}\n\nexport default MainDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}